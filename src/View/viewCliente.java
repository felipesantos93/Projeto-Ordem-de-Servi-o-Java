/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.sql.*;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
// a linnha abaixo importa recursos da biblioteca rs2xml.jar (para usar o campo de pesquisar)
import net.proteanit.sql.DbUtils;
import DAO.ConexaoBD;

/**
 *
 * @author Felipe
 */
public final class viewCliente extends javax.swing.JInternalFrame {
    Connection conn ;  
    PreparedStatement prst;
    ResultSet rs ;
    

    /**
     * Creates new form viewCliente
     */
    public viewCliente() {
        initComponents();
        conn = ConexaoBD.conectar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        bttnCadastrarCliente = new javax.swing.JButton();
        bttnAlterarCliente = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        txtPesquisaCliente = new javax.swing.JTextField();
        txtEmailCliente = new javax.swing.JTextField();
        txtEnderecoCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCidadeCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFoneCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNomeCLiente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodigoCliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("jLabel8");

        jToggleButton1.setText("jToggleButton1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Clientes");

        bttnCadastrarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icons8-save-48.png"))); // NOI18N
        bttnCadastrarCliente.setToolTipText("Salvar");
        bttnCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCadastrarClienteActionPerformed(evt);
            }
        });

        bttnAlterarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icons8-pencil-drawing-48.png"))); // NOI18N
        bttnAlterarCliente.setToolTipText("Alterar");
        bttnAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAlterarClienteActionPerformed(evt);
            }
        });

        jLabel7.setText("* Campos Obrigátorios");

        tabelaCliente = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CÓDIGO", "NOME", "FONE", "CIDADE", "ENDEREÇO", "EMAIL"
            }
        ));
        tabelaCliente.setFocusable(false);
        tabelaCliente.getTableHeader().setReorderingAllowed(false);
        tabelaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaClienteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaCliente);
        if (tabelaCliente.getColumnModel().getColumnCount() > 0) {
            tabelaCliente.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabelaCliente.getColumnModel().getColumn(1).setPreferredWidth(120);
            tabelaCliente.getColumnModel().getColumn(4).setPreferredWidth(130);
            tabelaCliente.getColumnModel().getColumn(5).setPreferredWidth(120);
        }

        txtPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaClienteActionPerformed(evt);
            }
        });
        txtPesquisaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaClienteKeyReleased(evt);
            }
        });

        txtEnderecoCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEnderecoClienteKeyPressed(evt);
            }
        });

        jLabel4.setText("Endereço :");

        jLabel5.setText("* E-mail :");

        txtCidadeCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCidadeClienteKeyPressed(evt);
            }
        });

        jLabel6.setText("Cidade :");

        txtFoneCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFoneClienteKeyPressed(evt);
            }
        });

        jLabel3.setText("*Fone :");

        txtNomeCLiente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeCLienteKeyPressed(evt);
            }
        });

        jLabel2.setText("*Nome :");

        txtCodigoCliente.setEditable(false);

        jLabel1.setText("Código :");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icons8-magnifying-glass-16.png"))); // NOI18N

        jLabel10.setText("Pesquisar por nome do cliente :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtEnderecoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmailCliente))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNomeCLiente, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(txtFoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel6)
                                        .addGap(0, 69, Short.MAX_VALUE))
                                    .addComponent(txtCidadeCliente)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bttnCadastrarCliente)
                                        .addGap(18, 18, 18)
                                        .addComponent(bttnAlterarCliente)))
                                .addGap(0, 428, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bttnAlterarCliente))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomeCLiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEnderecoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(bttnCadastrarCliente))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel7)))))
                .addGap(77, 77, 77))
        );

        setBounds(0, 0, 618, 484);
    }// </editor-fold>//GEN-END:initComponents

    private void bttnCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnCadastrarClienteActionPerformed
  
          cadastrarCliente();
          limparCampos();  
 
       
    }//GEN-LAST:event_bttnCadastrarClienteActionPerformed

    private void txtPesquisaClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaClienteKeyReleased
        //chama o método pesquisar clientes 
       pesquisarClientes();
    }//GEN-LAST:event_txtPesquisaClienteKeyReleased

    private void bttnAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnAlterarClienteActionPerformed
       alterarCliente();
       
        
    }//GEN-LAST:event_bttnAlterarClienteActionPerformed

    private void txtNomeCLienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeCLienteKeyPressed
          //apertar enter para ir para o proximo campo
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            txtFoneCliente.requestFocus();
        } 
    }//GEN-LAST:event_txtNomeCLienteKeyPressed

    private void txtFoneClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFoneClienteKeyPressed
         if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            txtCidadeCliente.requestFocus();
        }
    }//GEN-LAST:event_txtFoneClienteKeyPressed

    private void txtCidadeClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeClienteKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            txtEnderecoCliente.requestFocus();
        }
    }//GEN-LAST:event_txtCidadeClienteKeyPressed

    private void txtEnderecoClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnderecoClienteKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            txtEmailCliente.requestFocus();
        }
    }//GEN-LAST:event_txtEnderecoClienteKeyPressed

    private void tabelaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClienteMouseClicked
        // evento que sera usado para setar os campos da tabela (clicando com o mouse)
        setarCamposCliente();
    }//GEN-LAST:event_tabelaClienteMouseClicked

    private void txtPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnAlterarCliente;
    private javax.swing.JButton bttnCadastrarCliente;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable tabelaCliente;
    private javax.swing.JTextField txtCidadeCliente;
    private javax.swing.JTextField txtCodigoCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtEnderecoCliente;
    private javax.swing.JTextField txtFoneCliente;
    private javax.swing.JTextField txtNomeCLiente;
    private javax.swing.JTextField txtPesquisaCliente;
    // End of variables declaration//GEN-END:variables


    private void cadastrarCliente() {
         String sql = "INSERT INTO tbl_clientes (nome_cliente, fone_cliente , cidade_cliente, endereco_cliente, email_cliente ) VALUES (?,?,?,?,?)";
        
        try {
            prst = conn.prepareStatement(sql);
            prst.setString(1, txtNomeCLiente.getText());
            prst.setString(2, txtFoneCliente.getText());
            prst.setString(3, txtCidadeCliente.getText());
            prst.setString(4, txtEnderecoCliente.getText());
            prst.setString(5, txtEmailCliente.getText());
            // a linha abaixo atualiza a tabela usuario com os dados do formulario
            if ((txtNomeCLiente.getText().isEmpty()) | (txtFoneCliente.getText().isEmpty()) | (txtEmailCliente.getText().isEmpty())) {
                JOptionPane.showMessageDialog(null, "Preencha os campos obrigatorios!");
            } else {
                prst.executeUpdate();
                prst.close();
                JOptionPane.showMessageDialog(null, "Cliente cadastrado com sucesso!");
                limparCampos();

            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar cadastrar cliente!" + erro);

        }
    }
    // método abaixo limpa os campos do formulario
    public void limparCampos() {
        txtNomeCLiente.setText("");
        txtFoneCliente.setText("");
        txtEnderecoCliente.setText("");
        txtEmailCliente.setText("");
        txtCidadeCliente.setText("");
        txtCodigoCliente.setText("");
        txtNomeCLiente.requestFocus();
       ((DefaultTableModel)tabelaCliente.getModel()).setRowCount(0);
       
        
    }
    
    //método para  pesquisar clientes pelo nome com filtro
    private void pesquisarClientes() {
        
        String sql = "SELECT id_cliente AS CODIGO, nome_cliente AS NOME, fone_cliente AS FONE, cidade_cliente AS CIDADE , endereco_cliente AS ENDERECO , email_cliente AS EMAIL  FROM tbl_clientes WHERE nome_cliente LIKE ?";
        try {
            prst=  conn.prepareStatement(sql);
            
            //passando o conteúdo da caixa de pesquisa para o ?
            //atenção ao "%" pois ele é a continuação da String slq
            prst.setString(1, txtPesquisaCliente.getText() + "%");
            rs = prst.executeQuery();
            // a linha abaixo usa biblioteca rs2xml.jar para preencher a tabela
            tabelaCliente.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "PesquisarClientes: " + erro);
        }
    }
    //metodo para setar os campos do fomulario para tabela  
    private void setarCamposCliente(){
        int setar = tabelaCliente.getSelectedRow();
        txtCodigoCliente.setText(tabelaCliente.getModel().getValueAt(setar, 0).toString());
        txtNomeCLiente.setText(tabelaCliente.getModel().getValueAt(setar, 1).toString());
        txtFoneCliente.setText(tabelaCliente.getModel().getValueAt(setar, 2).toString());
        txtCidadeCliente.setText(tabelaCliente.getModel().getValueAt(setar, 3).toString());
        txtEnderecoCliente.setText(tabelaCliente.getModel().getValueAt(setar, 4).toString());
        txtEmailCliente.setText(tabelaCliente.getModel().getValueAt(setar, 5).toString());
       //a linha abaixo desabilita o botão adicionar
      bttnCadastrarCliente.setEnabled(false);
        
        
    }

// metodo para alterar dados do usuario
    private void alterarCliente() {
        String sql = "UPDATE tbl_clientes SET nome_cliente =? , fone_cliente = ? , cidade_cliente = ? , endereco_cliente =?, email_cliente = ? WHERE id_cliente = ?";
          try {
            prst = conn.prepareStatement(sql);
            prst.setString(1, txtNomeCLiente.getText());
            prst.setString(2, txtFoneCliente.getText());
            prst.setString(3, txtCidadeCliente.getText());
            prst.setString(4, txtEnderecoCliente.getText());
            prst.setString(5, txtEmailCliente.getText());
             prst.setString(6, txtCodigoCliente.getText());
            // a linha abaixo atualiza a tabela usuario com os dados do formulario
            if ((txtNomeCLiente.getText().isEmpty()) | (txtFoneCliente.getText().isEmpty()) | (txtEmailCliente.getText().isEmpty())) {
                JOptionPane.showMessageDialog(null, "Preencha os campos obrigatorios!");
            } else {
                prst.executeUpdate();
                limparCampos();
                bttnCadastrarCliente.setEnabled(true);
                prst.close();
                JOptionPane.showMessageDialog(null, "Cliente alterado com sucesso!");
                

            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar alterar cliente!" + erro);

        }
    }
   /*
   metodo para excluir cliente
private void excluirCliente(){
    int confirma = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir este cliente ?", "Atenção!" , JOptionPane.YES_NO_OPTION);
         if (confirma==JOptionPane.YES_OPTION) {
              String sql = "DELETE FROM tbl_clientes WHERE id_cliente = ?";
              try {
                 prst = conn.prepareStatement(sql);
                 prst.setString(1,txtCodigoCliente.getText());
                 prst.executeUpdate();
             } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null,erro);
             }
        
    } 
    
}
*/
}
    
     

 

 
    
    

  

